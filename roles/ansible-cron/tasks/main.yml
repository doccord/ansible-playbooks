---
# tasks file for ansible-cron
- ansible.builtin.assert:
    that: "ansible_cron__inventory_file == 'prod-inventory' or ansible_cron__inventory_file == 'testing-inventory'"
    fail_msg: "Please set ansible_cron__inventory_file to the correct inventory file in host_vars/{{ inventory_hostname }}.yml"

- name: "Ensure ansible & ara dependencies are installed"
  ansible.builtin.apt:
    name:
      - "software-properties-common"
      - "python3-pip"
    state: "latest"
  when: ansible_distribution == "Ubuntu"
- name: "Ensure ansible is installed"
  ansible.builtin.package:
    name: "{% if ansible_distribution == 'FreeBSD' %}py37-ansible{% else %}ansible{% endif %}"
    state: "latest"
- name: "Ensure ara is installed"
  ansible.builtin.pip:
    extra_args: "--user"
    name: "ara"
    state: "latest"
  become: yes
  become_user: "ansible"

- name: Add ansible user to srcs group
  ansible.builtin.user:
    append: yes
    name: "ansible"
    groups:
      - "srcs"
- name: Checkout playbooks
  ansible.builtin.git:
    repo: "https://github.com/sdwilsh/ansible-playbooks.git"
    dest: "/src/ansible-playbooks"
    update: no
- name: "Ensure /src/ansible-playbooks is owned by ansible"
  ansible.builtin.file:
    state: "directory"
    recurse: yes
    path: "/src/ansible-playbooks"
    owner: "ansible"
    group: "ansible"
- name: Create vault password file
  ansible.builtin.copy:
    dest: "/src/ansible-playbooks/.ansible_vault_password"
    content: "{{ ansible_cron__vault_password }}"
    mode: "u=rw,g=,o="
    owner: "ansible"
    group: "ansible"

- name: "Install logrotate conf for ansible logs"
  when: ansible_os_family == "Debian"
  ansible.builtin.template:
    dest: "/etc/logrotate.d/ansible"
    owner: "root"
    group: "root"
    mode: "u=rw,g=r,o=r"
    src: "logrotate-ansible.j2"
- name: "Ensure /usr/local/etc/newsyslog.conf.d/ exists"
  when: ansible_distribution == "FreeBSD"
  ansible.builtin.file:
    group: "wheel"
    mode: "u=rwx,g=rx,o=rx"
    owner: "root"
    path: "/usr/local/etc/newsyslog.conf.d"
    state: "directory"
- name: "Install newsyslog conf for ansible logs"
  when: ansible_distribution == "FreeBSD"
  ansible.builtin.template:
    dest: "/usr/local/etc/newsyslog.conf.d/ansible.conf"
    owner: "root"
    group: "wheel"
    mode: "u=rw,g=r,o=r"
    src: "newsyslog-ansible.conf.j2"
- name: Set environment in cron file to log to /var/log/ansible.log
  ansible.builtin.cron:
    name: "ANSIBLE_LOG_PATH"
    env: yes
    job: "/var/log/ansible.log"
    user: "ansible"
    state: present
- name: "Determine the path for ARA's callback plugin"
  ansible.builtin.command:
    argv:
      - "{{ ansible_python.executable }}"
      - "-m"
      - "ara.setup.callback_plugins"
  changed_when: false
  become_user: "ansible"
  register: fetch_ara_callback_plugin_path
- name: Set environment in cron file for ARA callback
  ansible.builtin.cron:
    name: "ANSIBLE_CALLBACK_PLUGINS"
    env: yes
    job: "{{ fetch_ara_callback_plugin_path.stdout }}"
    user: "ansible"
    state: present
- name: Set environment in cron file for ARA API Client
  ansible.builtin.cron:
    name: "ARA_API_CLIENT"
    env: yes
    job: "http"
    user: "ansible"
    state: present
- name: Set environment in cron file for ARA API Client
  ansible.builtin.cron:
    name: "ARA_API_SERVER"
    env: yes
    job: "http://ara.hogs.tswn.us:8000"
    user: "ansible"
    state: present
- ansible.builtin.set_fact:
    collections_command: "ansible-galaxy collection install -r requirements.yml"
    git_command: "git pull --rebase"
    playbook_command: "ansible-playbook --connection=local -i {{ ansible_cron__inventory_file }} -l {{ ansible_fqdn }} site.yml"
    role_command: "ansible-galaxy role install -r requirements.yml"
- ansible.builtin.set_fact:
    cron_command: "cd /src/ansible-playbooks && {{ git_command }} && {{ collections_command }} && {{ role_command }} && {{ playbook_command }} 2>&1"
- name: Setup cron job
  ansible.builtin.cron:
    name: "run ansible locally"
    job: "if ! out=`{{ cron_command }}`; then echo $out; fi"
    user: "ansible"
    minute: "*/15"
    state: present


