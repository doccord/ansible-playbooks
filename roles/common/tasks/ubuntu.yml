---
- include: iscsi.yml

# Networking
- name: "Set hostname"
  ansible.builtin.hostname:
    name: "{{ inventory_hostname[0:-13] }}"
  when: "'hogs.tswn.us' in inventory_hostname"
  tags:
    - "networking"
- name: "Remove netplan.io"
  ansible.builtin.apt:
    name: "netplan.io"
    state: "absent"
  tags:
    - "networking"
- name: "Remove netplan directories"
  ansible.builtin.file:
    path: "{{ item }}"
    state: "absent"
  loop:
    - "/etc/netplan"
    - "/lib/netplan"
    - "/run/netplan"
  tags:
    - "networking"
- name: "Install Dependencies for /etc/network/interfaces"
  ansible.builtin.apt:
    name: "{{ item }}"
    state: "latest"
  loop:
    - "ifupdown"
    - "net-tools"
  tags:
    - "networking"
- name: "Setup /etc/network/interfaces"
  ansible.builtin.template:
    dest: "/etc/network/interfaces"
    group: "root"
    mode: "u=rw,g=r,o=r"
    owner: "root"
    src: "network-interfaces.j2"
    validate: "ifup --no-act %s"
  notify: "restart networking interfaces"
  tags:
    - "networking"
- name: "Ensure networking is enabled and unmasked"
  ansible.builtin.systemd:
    enabled: yes
    masked: no
    name: "networking"
  tags:
    - "networking"

- name: "Ensure systemd-networkd[.socket] is stopped and disabled"
  ansible.builtin.systemd:
    enabled: no
    name: "{{ item }}"
    state: "stopped"
  loop:
    - "systemd-networkd"
    - "systemd-networkd.socket"
  tags:
    - "networking"

- name: "Disable systemd-resolved DNS Stub Listener"
  notify: "restart systemd-resolved"
  ansible.builtin.lineinfile:
    insertafter: "[Resolve]"
    line: "DNSStubListener=no"
    path: "/etc/systemd/resolved.conf"
  tags:
    - "networking"
- name: "Setup /etc/resolv.conf"
  ansible.builtin.template:
    src: "resolv.conf.j2"
    dest: "/etc/resolv.conf"
    mode: "u=rw,g=r,o=r"
    owner: "root"
    group: "root"
  tags:
    - "networking"

# Time Management
- name: Set timezone to US/Pacific
  community.general.timezone:
    name: US/Pacific
  become: yes
  become_method: sudo
- name: Ensure chrony is installed
  ansible.builtin.apt:
    name: "chrony"
    state: "latest"
- name: Setup chrony conf
  ansible.builtin.template:
    src: "chrony.conf.ubuntu.j2"
    dest: "/etc/chrony/chrony.conf"
    mode: "u=rw,g=r,o=r"
    owner: "root"
    group: "root"
  register: chrony_conf
- name: Ensure chrony is running with latest config
  ansible.builtin.systemd:
    name: "chrony"
    state: "{% if chrony_conf.changed %}restarted{% else %}started{% endif %}"
    enabled: yes

# Provisoning Cleanup
- name: Remove ubuntu user
  user:
    name: ubuntu
    state: absent
    remove: yes
  when: ansible_distribution == "Ubuntu"
