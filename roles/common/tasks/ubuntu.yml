---
# Networking
- name: Check for existing configurations in /etc/netplan
  ansible.builtin.find:
    recurse: no
    file_type: "file"
    paths:
      - "/etc/netplan"
    excludes:
      - "00-ansible-config.yaml"
    patterns:
      - "*.yaml"
  register: existing_configs
- name: Set aside existing configurations in /etc/netplan
  ansible.builtin.command:
    argv:
      - "mv"
      - "{{ item.path }}"
      - "{{ item.path }}.old"
  loop: "{{ existing_configs.files }}"
  when: existing_configs.matched
- name: Setup networking
  ansible.builtin.template:
    dest: "/etc/netplan/00-ansible-config.yaml"
    group: "root"
    mode: "u=rw,g=r,o=r"
    owner: "root"
    src: "netplan.yaml.j2"
    validate: "netplan try --config-file=%s --timeout=5"
  notify: "netplan apply"

# Time Management
- name: Set timezone to US/Pacific
  community.general.timezone:
    name: US/Pacific
  become: yes
  become_method: sudo
- name: Ensure chrony is installed
  ansible.builtin.apt:
    name: "chrony"
    state: "latest"
- name: Setup chrony conf
  ansible.builtin.template:
    src: "chrony.conf.ubuntu.j2"
    dest: "/etc/chrony/chrony.conf"
    mode: "u=rw,g=r,o=r"
    owner: "root"
    group: "root"
  register: chrony_conf
- name: Ensure chrony is running with latest config
  ansible.builtin.systemd:
    name: "chrony"
    state: "{% if chrony_conf.changed %}restarted{% else %}started{% endif %}"
    enabled: yes

# Provisoning Cleanup
- name: Remove ubuntu user
  user:
    name: ubuntu
    state: absent
    remove: yes
  when: ansible_distribution == "Ubuntu"